name: Publish and release CumulusCI

on:
    workflow_dispatch:
    push:
        branches:
            - main
        paths:
            - cumulusci/__about__.py

concurrency: publishing

jobs:
    publish-to-pypi:
        name: Publish new release to PyPI
        permissions:
            contents: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@main
            - name: Set up Python 3.12
              uses: actions/setup-python@v4
              with:
                  python-version: 3.12
                  cache: pip
            - name: Install build tools
              run: python -m pip install hatch tomli tomli-w
            - name: Check version type
              id: version_check
              run: |
                  VERSION=$(hatch version)
                  echo "Current version: $VERSION"
                  IS_PUBLISHABLE="false"
                  # Stable versions (major, minor, patch) don't have letters like a, b, rc
                  # and beta versions have 'b'.
                  if ! [[ "$VERSION" =~ [a-df-z] ]] && ! [[ "$VERSION" =~ "rc" ]]; then
                      IS_PUBLISHABLE="true"
                  fi
                  echo "publishable=${IS_PUBLISHABLE}" >> $GITHUB_OUTPUT
            - name: Build source tarball and binary wheel
              if: steps.version_check.outputs.publishable == 'true'
              run: hatch build -c
            - name: Upload to PyPI
              if: steps.version_check.outputs.publishable == 'true'
              run: hatch publish
              env:
                  HATCH_INDEX_USER: "__token__"
                  HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
                  HATCH_INDEX_REPO: ${{ secrets.PYPI_URL }}
            - name: Create release
              if: steps.version_check.outputs.publishable == 'true'
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  VERSION="$(hatch version)"
                  awk '/<!-- latest-start -->/,/<!-- latest-stop -->/' docs/history.md > changelog.md
                  gh release create "v$VERSION" \
                    dist/*.whl \
                    dist/*.tar.gz \
                    --notes-file changelog.md \
                    --title $VERSION
